// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chat.proto

package chat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Range struct {
	StartIndex           int32    `protobuf:"varint,1,opt,name=StartIndex,proto3" json:"StartIndex,omitempty"`
	EndIndex             int32    `protobuf:"varint,2,opt,name=EndIndex,proto3" json:"EndIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Range) Reset()         { *m = Range{} }
func (m *Range) String() string { return proto.CompactTextString(m) }
func (*Range) ProtoMessage()    {}
func (*Range) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{0}
}

func (m *Range) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Range.Unmarshal(m, b)
}
func (m *Range) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Range.Marshal(b, m, deterministic)
}
func (m *Range) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Range.Merge(m, src)
}
func (m *Range) XXX_Size() int {
	return xxx_messageInfo_Range.Size(m)
}
func (m *Range) XXX_DiscardUnknown() {
	xxx_messageInfo_Range.DiscardUnknown(m)
}

var xxx_messageInfo_Range proto.InternalMessageInfo

func (m *Range) GetStartIndex() int32 {
	if m != nil {
		return m.StartIndex
	}
	return 0
}

func (m *Range) GetEndIndex() int32 {
	if m != nil {
		return m.EndIndex
	}
	return 0
}

type ItemKey struct {
	Index                int32    `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemKey) Reset()         { *m = ItemKey{} }
func (m *ItemKey) String() string { return proto.CompactTextString(m) }
func (*ItemKey) ProtoMessage()    {}
func (*ItemKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{1}
}

func (m *ItemKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemKey.Unmarshal(m, b)
}
func (m *ItemKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemKey.Marshal(b, m, deterministic)
}
func (m *ItemKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemKey.Merge(m, src)
}
func (m *ItemKey) XXX_Size() int {
	return xxx_messageInfo_ItemKey.Size(m)
}
func (m *ItemKey) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemKey.DiscardUnknown(m)
}

var xxx_messageInfo_ItemKey proto.InternalMessageInfo

func (m *ItemKey) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type ItemValue struct {
	Value                string   `protobuf:"bytes,1,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemValue) Reset()         { *m = ItemValue{} }
func (m *ItemValue) String() string { return proto.CompactTextString(m) }
func (*ItemValue) ProtoMessage()    {}
func (*ItemValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{2}
}

func (m *ItemValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemValue.Unmarshal(m, b)
}
func (m *ItemValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemValue.Marshal(b, m, deterministic)
}
func (m *ItemValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemValue.Merge(m, src)
}
func (m *ItemValue) XXX_Size() int {
	return xxx_messageInfo_ItemValue.Size(m)
}
func (m *ItemValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemValue.DiscardUnknown(m)
}

var xxx_messageInfo_ItemValue proto.InternalMessageInfo

func (m *ItemValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Item struct {
	Key                  *ItemKey   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                *ItemValue `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_8c585a45e2093e54, []int{3}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetKey() *ItemKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *Item) GetValue() *ItemValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Range)(nil), "chat.Range")
	proto.RegisterType((*ItemKey)(nil), "chat.ItemKey")
	proto.RegisterType((*ItemValue)(nil), "chat.ItemValue")
	proto.RegisterType((*Item)(nil), "chat.Item")
}

func init() { proto.RegisterFile("chat.proto", fileDescriptor_8c585a45e2093e54) }

var fileDescriptor_8c585a45e2093e54 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xce, 0x48, 0x2c,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x9c, 0xb9, 0x58, 0x83, 0x12,
	0xf3, 0xd2, 0x53, 0x85, 0xe4, 0xb8, 0xb8, 0x82, 0x4b, 0x12, 0x8b, 0x4a, 0x3c, 0xf3, 0x52, 0x52,
	0x2b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x90, 0x44, 0x84, 0xa4, 0xb8, 0x38, 0x5c, 0xf3,
	0x52, 0x20, 0xb2, 0x4c, 0x60, 0x59, 0x38, 0x5f, 0x49, 0x9e, 0x8b, 0xdd, 0xb3, 0x24, 0x35, 0xd7,
	0x3b, 0xb5, 0x52, 0x48, 0x84, 0x8b, 0x15, 0xd9, 0x04, 0x08, 0x47, 0x49, 0x91, 0x8b, 0x13, 0xa4,
	0x20, 0x2c, 0x31, 0xa7, 0x34, 0x15, 0xa4, 0x04, 0xcc, 0x00, 0x2b, 0xe1, 0x0c, 0x82, 0x70, 0x94,
	0xfc, 0xb8, 0x58, 0x40, 0x4a, 0x84, 0xe4, 0xb9, 0x98, 0xbd, 0x53, 0x2b, 0xc1, 0x72, 0xdc, 0x46,
	0xbc, 0x7a, 0x60, 0x07, 0x43, 0x0d, 0x0f, 0x02, 0xc9, 0x08, 0xa9, 0xc2, 0xb4, 0x33, 0x81, 0x95,
	0xf0, 0x23, 0x94, 0x80, 0x85, 0xa1, 0xe6, 0x19, 0x25, 0x71, 0xb1, 0x38, 0x67, 0x24, 0x96, 0x08,
	0x69, 0x73, 0xb1, 0xbb, 0xa7, 0x96, 0x80, 0x8d, 0x46, 0x35, 0x4d, 0x0a, 0x5d, 0xa7, 0x12, 0x83,
	0x90, 0x2e, 0x17, 0xa7, 0x4f, 0x66, 0x31, 0x58, 0x75, 0xb1, 0x10, 0x37, 0x44, 0x1e, 0x1c, 0x3c,
	0x58, 0x14, 0x1b, 0x30, 0x26, 0xb1, 0x81, 0x43, 0xd2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x19,
	0x61, 0x04, 0xaf, 0x57, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	// SIMPLE RPC - param is the client request and the return type is the server response
	GetItem(ctx context.Context, in *ItemKey, opts ...grpc.CallOption) (*ItemValue, error)
	// SERVERSIDE STREAM - server sends a stream of responses and the client reads them until there are no more
	ListItems(ctx context.Context, in *Range, opts ...grpc.CallOption) (Chat_ListItemsClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) GetItem(ctx context.Context, in *ItemKey, opts ...grpc.CallOption) (*ItemValue, error) {
	out := new(ItemValue)
	err := c.cc.Invoke(ctx, "/chat.Chat/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) ListItems(ctx context.Context, in *Range, opts ...grpc.CallOption) (Chat_ListItemsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/chat.Chat/ListItems", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatListItemsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_ListItemsClient interface {
	Recv() (*ItemValue, error)
	grpc.ClientStream
}

type chatListItemsClient struct {
	grpc.ClientStream
}

func (x *chatListItemsClient) Recv() (*ItemValue, error) {
	m := new(ItemValue)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	// SIMPLE RPC - param is the client request and the return type is the server response
	GetItem(context.Context, *ItemKey) (*ItemValue, error)
	// SERVERSIDE STREAM - server sends a stream of responses and the client reads them until there are no more
	ListItems(*Range, Chat_ListItemsServer) error
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) GetItem(ctx context.Context, req *ItemKey) (*ItemValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}
func (*UnimplementedChatServer) ListItems(req *Range, srv Chat_ListItemsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListItems not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat.Chat/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).GetItem(ctx, req.(*ItemKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_ListItems_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Range)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).ListItems(m, &chatListItemsServer{stream})
}

type Chat_ListItemsServer interface {
	Send(*ItemValue) error
	grpc.ServerStream
}

type chatListItemsServer struct {
	grpc.ServerStream
}

func (x *chatListItemsServer) Send(m *ItemValue) error {
	return x.ServerStream.SendMsg(m)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetItem",
			Handler:    _Chat_GetItem_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListItems",
			Handler:       _Chat_ListItems_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chat.proto",
}
